(mh-query
 10 10
 (define (xor a b) (not (eq? a b)))
 (define a (flip))
 (define b (flip))
 (define foo (lambda () (xor a b)))
 (list a b)
 (foo))

;; (define (xor-proposer state)
;;   (let* ([xrp-draws (mcmc-state->xrp-draws mcmc-state)]
;;          [interventions (map flip-intervention xrp-draws)])
;;     (list 0.0 0.0 interventions)))



;; (mh-query
;;  10 10
;;  (define (xor a b) (not (eq? a b)))
;;  (define a (flip))
;;  (define b (flip))
          
;;  (define foo (with-proposer (lambda () (xor a b)) xor-proposer)
;;  (list a b)
;;  (foo))