(+ 2 2)
(test-expr)
;;(define* (f a (b #f)) (list a b))
(if #f 1 0)
;; (define (f x)
;;   (define (g y)
;;     (+ x y))
;;   (g 3))
;; (f 4)

;; (define (f lst)
;;   (cond [(null? lst) '()]
;;         [(null? (rest lst)) (rest lst)]
;;         [else (rest lst)]))

;; (f '())

 (define (f) (uniform-draw '(a b c)))
(mh-query
 10 10
 (define v (f))
 v
 (equal? v 'a))
